<?xml version="1.0" encoding="UTF-8"?>
<project name="filesystem">

    <!-- Mandatory targets -->
    <target name="bootstrap" />
    <target name="update" />
    <target name="configure" />
    <target name="build" depends="create-directories,create-symlinks,set-permissions" />
    <target name="review" />
    <target name="migrate" />
    <target name="sync" />

    <!-- Creates directories and symlinks, sets permissions -->
	<target name="create-directories">
        <script language="javascript">
            <![CDATA[
            	importClass(java.io.File);
                var paths = project.getProperty('mkdir');
                if (paths != undefined) {
                    paths = paths.split(',');
                    for (var i=0; i < paths.length; i++) {
    	                taskMkdir = project.createTask('mkdir');
    	                taskMkdir.setDir(new File(paths[i]));
    	                taskMkdir.perform();
                    }
                }
            ]]>
        </script>
	</target>

	<target name="create-symlinks">
        <propertyselector property="symlinks" delimiter="," match="^symlink.(.+)" select="\1" />
        <script language="javascript">
            <![CDATA[
                var ids = project.getProperty('symlinks');
                if (ids != undefined) {
                    ids = ids.split(',');
                    for (var i = 0; i < ids.length; i++) {
                        var symlinkSpec = project.getProperty('symlink.' + ids[i]).split(',');
                        project.setProperty('symlink.current.target', symlinkSpec[0]);
                        project.setProperty('symlink.current.name', symlinkSpec[1]);
                        taskAntCall = project.createTask('antcall');
                        taskAntCall.setTarget('create-symlink');
                        taskAntCall.perform();
                    }
                }
            ]]>
        </script>
	</target>

	<target name="create-symlink">
        <propertyregex property="symlink.current.name.first"
              input="${symlink.current.name}"
              regexp="(.)?+"
              select="\1"
              casesensitive="false" />
		<if>
            <equals arg1="${symlink.current.name.first}" arg2="/"/>
            <then>
                <property name="symlink.current.name.all" value="${symlink.current.name}"/>
            </then>
            <else>
                <property name="symlink.current.name.all" value="${project.dirs.base}/${symlink.current.name}"/>
            </else>
        </if>
        <if>
            <available file="${symlink.current.name.all}" />
            <then>
                <echo>Le lien ${symlink.current.name.all} existe déjà.</echo>
            </then>
            <else>
                <echo>Création du lien ${symlink.current.name.all} vers ${symlink.current.target}.</echo>
                <exec executable="ln" failonerror="false" dir="${project.dirs.base}">
                    <arg value="-sfv" />
                    <arg value="${symlink.current.target}" />
                    <arg value="${symlink.current.name}" />
                </exec>
            </else>
        </if>
	</target>

	<target name="set-permissions">
        <propertyselector property="modes" delimiter="," match="chmod.(\d+)" select="\1" />
        <script language="javascript">
            <![CDATA[
                importClass(java.io.File);
                var modes = project.getProperty('modes');
                if (modes != undefined) {
                    modes = modes.split(',');
                    for (var i = 0; i < 1; i++) {
                        var mode = modes[i];
                        var paths = project.getProperty('chmod.' + mode).split(',');
                        for (var j = 0; j < paths.length; j++) {
                            var path = paths[j];
                            project.setProperty('path.current', path);
                            project.setProperty('mode.current', mode);
                            taskAntCall = project.createTask('antcall');
                            taskAntCall.setTarget('chmod');
                            taskAntCall.perform();
                        }
                    }
                }
            ]]>
        </script>
	</target>

    <target name="chmod">
        <echo>Applying mode ${mode.current} to path ${path.current}</echo>
        <chmod perm="${mode.current}" file="${project.dirs.base}/${path.current}" type="both" />
    </target>
</project>
